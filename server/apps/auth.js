import { Router } from 'express';
import bcrypt from 'bcrypt';
import { db } from '../utils/db.mjs';

const authRouter = Router();

// üê® Todo: Exercise #1
// ‡πÉ‡∏´‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á API ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ Register ‡∏ï‡∏±‡∏ß User ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏ß‡πâ‡πÉ‡∏ô Database ‡∏ï‡∏≤‡∏°‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡πÑ‡∏ß‡πâ
authRouter.post('/register', async (req, res) => {
  const user = {
    username: req.body.username,
    password: req.body.password,
    firstName: req.body.firstName,
    lastname: req.body.lastName
  };

  const salt = await bcrypt.genSalt(10);
  user.password = await bcrypt.hash(user.password, salt);

  const collection = db.collection('users');
  await collection.insertOne(user);

  return res.json({
    message: 'User has been created successfully.'
  });
});

// üê® Todo: Exercise #3
// ‡πÉ‡∏´‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á API ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ Login ‡∏ï‡∏±‡∏ß User ‡∏ï‡∏≤‡∏°‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡πÑ‡∏ß‡πâ

export default authRouter;
